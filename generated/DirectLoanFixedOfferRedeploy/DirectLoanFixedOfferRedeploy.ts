// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminFeeUpdated extends ethereum.Event {
  get params(): AdminFeeUpdated__Params {
    return new AdminFeeUpdated__Params(this);
  }
}

export class AdminFeeUpdated__Params {
  _event: AdminFeeUpdated;

  constructor(event: AdminFeeUpdated) {
    this._event = event;
  }

  get newAdminFee(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class ERC20Permit extends ethereum.Event {
  get params(): ERC20Permit__Params {
    return new ERC20Permit__Params(this);
  }
}

export class ERC20Permit__Params {
  _event: ERC20Permit;

  constructor(event: ERC20Permit) {
    this._event = event;
  }

  get erc20Contract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isPermitted(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class LoanLiquidated extends ethereum.Event {
  get params(): LoanLiquidated__Params {
    return new LoanLiquidated__Params(this);
  }
}

export class LoanLiquidated__Params {
  _event: LoanLiquidated;

  constructor(event: LoanLiquidated) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get loanPrincipalAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get nftCollateralId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get loanMaturityDate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get loanLiquidationDate(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get nftCollateralContract(): Address {
    return this._event.parameters[7].value.toAddress();
  }
}

export class LoanRenegotiated extends ethereum.Event {
  get params(): LoanRenegotiated__Params {
    return new LoanRenegotiated__Params(this);
  }
}

export class LoanRenegotiated__Params {
  _event: LoanRenegotiated;

  constructor(event: LoanRenegotiated) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get newLoanDuration(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newMaximumRepaymentAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get renegotiationFee(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get renegotiationAdminFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class LoanRepaid extends ethereum.Event {
  get params(): LoanRepaid__Params {
    return new LoanRepaid__Params(this);
  }
}

export class LoanRepaid__Params {
  _event: LoanRepaid;

  constructor(event: LoanRepaid) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get loanPrincipalAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get nftCollateralId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amountPaidToLender(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get adminFee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get revenueShare(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get revenueSharePartner(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get nftCollateralContract(): Address {
    return this._event.parameters[9].value.toAddress();
  }

  get loanERC20Denomination(): Address {
    return this._event.parameters[10].value.toAddress();
  }
}

export class LoanStarted extends ethereum.Event {
  get params(): LoanStarted__Params {
    return new LoanStarted__Params(this);
  }
}

export class LoanStarted__Params {
  _event: LoanStarted;

  constructor(event: LoanStarted) {
    this._event = event;
  }

  get loanId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get loanTerms(): LoanStartedLoanTermsStruct {
    return changetype<LoanStartedLoanTermsStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }

  get loanExtras(): LoanStartedLoanExtrasStruct {
    return changetype<LoanStartedLoanExtrasStruct>(
      this._event.parameters[4].value.toTuple()
    );
  }
}

export class LoanStartedLoanTermsStruct extends ethereum.Tuple {
  get loanPrincipalAmount(): BigInt {
    return this[0].toBigInt();
  }

  get maximumRepaymentAmount(): BigInt {
    return this[1].toBigInt();
  }

  get nftCollateralId(): BigInt {
    return this[2].toBigInt();
  }

  get loanERC20Denomination(): Address {
    return this[3].toAddress();
  }

  get loanDuration(): BigInt {
    return this[4].toBigInt();
  }

  get loanInterestRateForDurationInBasisPoints(): i32 {
    return this[5].toI32();
  }

  get loanAdminFeeInBasisPoints(): i32 {
    return this[6].toI32();
  }

  get nftCollateralWrapper(): Address {
    return this[7].toAddress();
  }

  get loanStartTime(): BigInt {
    return this[8].toBigInt();
  }

  get nftCollateralContract(): Address {
    return this[9].toAddress();
  }

  get borrower(): Address {
    return this[10].toAddress();
  }
}

export class LoanStartedLoanExtrasStruct extends ethereum.Tuple {
  get revenueSharePartner(): Address {
    return this[0].toAddress();
  }

  get revenueShareInBasisPoints(): i32 {
    return this[1].toI32();
  }

  get referralFeeInBasisPoints(): i32 {
    return this[2].toI32();
  }
}

export class MaximumLoanDurationUpdated extends ethereum.Event {
  get params(): MaximumLoanDurationUpdated__Params {
    return new MaximumLoanDurationUpdated__Params(this);
  }
}

export class MaximumLoanDurationUpdated__Params {
  _event: MaximumLoanDurationUpdated;

  constructor(event: MaximumLoanDurationUpdated) {
    this._event = event;
  }

  get newMaximumLoanDuration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DirectLoanFixedOfferRedeploy__loanIdToLoanResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: Address;
  value4: BigInt;
  value5: i32;
  value6: i32;
  value7: Address;
  value8: BigInt;
  value9: Address;
  value10: Address;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: Address,
    value4: BigInt,
    value5: i32,
    value6: i32,
    value7: Address,
    value8: BigInt,
    value9: Address,
    value10: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    map.set(
      "value6",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value6))
    );
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromAddress(this.value9));
    map.set("value10", ethereum.Value.fromAddress(this.value10));
    return map;
  }

  getLoanPrincipalAmount(): BigInt {
    return this.value0;
  }

  getMaximumRepaymentAmount(): BigInt {
    return this.value1;
  }

  getNftCollateralId(): BigInt {
    return this.value2;
  }

  getLoanERC20Denomination(): Address {
    return this.value3;
  }

  getLoanDuration(): BigInt {
    return this.value4;
  }

  getLoanInterestRateForDurationInBasisPoints(): i32 {
    return this.value5;
  }

  getLoanAdminFeeInBasisPoints(): i32 {
    return this.value6;
  }

  getNftCollateralWrapper(): Address {
    return this.value7;
  }

  getLoanStartTime(): BigInt {
    return this.value8;
  }

  getNftCollateralContract(): Address {
    return this.value9;
  }

  getBorrower(): Address {
    return this.value10;
  }
}

export class DirectLoanFixedOfferRedeploy__loanIdToLoanExtrasResult {
  value0: Address;
  value1: i32;
  value2: i32;

  constructor(value0: Address, value1: i32, value2: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    return map;
  }

  getRevenueSharePartner(): Address {
    return this.value0;
  }

  getRevenueShareInBasisPoints(): i32 {
    return this.value1;
  }

  getReferralFeeInBasisPoints(): i32 {
    return this.value2;
  }
}

export class DirectLoanFixedOfferRedeploy extends ethereum.SmartContract {
  static bind(address: Address): DirectLoanFixedOfferRedeploy {
    return new DirectLoanFixedOfferRedeploy(
      "DirectLoanFixedOfferRedeploy",
      address
    );
  }

  HUNDRED_PERCENT(): i32 {
    let result = super.call(
      "HUNDRED_PERCENT",
      "HUNDRED_PERCENT():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_HUNDRED_PERCENT(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "HUNDRED_PERCENT",
      "HUNDRED_PERCENT():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  LOAN_COORDINATOR(): Bytes {
    let result = super.call(
      "LOAN_COORDINATOR",
      "LOAN_COORDINATOR():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_LOAN_COORDINATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "LOAN_COORDINATOR",
      "LOAN_COORDINATOR():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  LOAN_TYPE(): Bytes {
    let result = super.call("LOAN_TYPE", "LOAN_TYPE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_LOAN_TYPE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("LOAN_TYPE", "LOAN_TYPE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  adminFeeInBasisPoints(): i32 {
    let result = super.call(
      "adminFeeInBasisPoints",
      "adminFeeInBasisPoints():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_adminFeeInBasisPoints(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "adminFeeInBasisPoints",
      "adminFeeInBasisPoints():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getERC20Permit(_erc20: Address): boolean {
    let result = super.call(
      "getERC20Permit",
      "getERC20Permit(address):(bool)",
      [ethereum.Value.fromAddress(_erc20)]
    );

    return result[0].toBoolean();
  }

  try_getERC20Permit(_erc20: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getERC20Permit",
      "getERC20Permit(address):(bool)",
      [ethereum.Value.fromAddress(_erc20)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getPayoffAmount(_loanId: BigInt): BigInt {
    let result = super.call(
      "getPayoffAmount",
      "getPayoffAmount(uint32):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_loanId)]
    );

    return result[0].toBigInt();
  }

  try_getPayoffAmount(_loanId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPayoffAmount",
      "getPayoffAmount(uint32):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_loanId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getWhetherNonceHasBeenUsedForUser(_user: Address, _nonce: BigInt): boolean {
    let result = super.call(
      "getWhetherNonceHasBeenUsedForUser",
      "getWhetherNonceHasBeenUsedForUser(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_nonce)
      ]
    );

    return result[0].toBoolean();
  }

  try_getWhetherNonceHasBeenUsedForUser(
    _user: Address,
    _nonce: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getWhetherNonceHasBeenUsedForUser",
      "getWhetherNonceHasBeenUsedForUser(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_nonce)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hub(): Address {
    let result = super.call("hub", "hub():(address)", []);

    return result[0].toAddress();
  }

  try_hub(): ethereum.CallResult<Address> {
    let result = super.tryCall("hub", "hub():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  loanIdToLoan(
    param0: BigInt
  ): DirectLoanFixedOfferRedeploy__loanIdToLoanResult {
    let result = super.call(
      "loanIdToLoan",
      "loanIdToLoan(uint32):(uint256,uint256,uint256,address,uint32,uint16,uint16,address,uint64,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new DirectLoanFixedOfferRedeploy__loanIdToLoanResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toI32(),
      result[6].toI32(),
      result[7].toAddress(),
      result[8].toBigInt(),
      result[9].toAddress(),
      result[10].toAddress()
    );
  }

  try_loanIdToLoan(
    param0: BigInt
  ): ethereum.CallResult<DirectLoanFixedOfferRedeploy__loanIdToLoanResult> {
    let result = super.tryCall(
      "loanIdToLoan",
      "loanIdToLoan(uint32):(uint256,uint256,uint256,address,uint32,uint16,uint16,address,uint64,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DirectLoanFixedOfferRedeploy__loanIdToLoanResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toI32(),
        value[6].toI32(),
        value[7].toAddress(),
        value[8].toBigInt(),
        value[9].toAddress(),
        value[10].toAddress()
      )
    );
  }

  loanIdToLoanExtras(
    param0: BigInt
  ): DirectLoanFixedOfferRedeploy__loanIdToLoanExtrasResult {
    let result = super.call(
      "loanIdToLoanExtras",
      "loanIdToLoanExtras(uint32):(address,uint16,uint16)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new DirectLoanFixedOfferRedeploy__loanIdToLoanExtrasResult(
      result[0].toAddress(),
      result[1].toI32(),
      result[2].toI32()
    );
  }

  try_loanIdToLoanExtras(
    param0: BigInt
  ): ethereum.CallResult<
    DirectLoanFixedOfferRedeploy__loanIdToLoanExtrasResult
  > {
    let result = super.tryCall(
      "loanIdToLoanExtras",
      "loanIdToLoanExtras(uint32):(address,uint16,uint16)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DirectLoanFixedOfferRedeploy__loanIdToLoanExtrasResult(
        value[0].toAddress(),
        value[1].toI32(),
        value[2].toI32()
      )
    );
  }

  loanRepaidOrLiquidated(param0: BigInt): boolean {
    let result = super.call(
      "loanRepaidOrLiquidated",
      "loanRepaidOrLiquidated(uint32):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_loanRepaidOrLiquidated(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "loanRepaidOrLiquidated",
      "loanRepaidOrLiquidated(uint32):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maximumLoanDuration(): BigInt {
    let result = super.call(
      "maximumLoanDuration",
      "maximumLoanDuration():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maximumLoanDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maximumLoanDuration",
      "maximumLoanDuration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _nftfiHub(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _permittedErc20s(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOfferCall extends ethereum.Call {
  get inputs(): AcceptOfferCall__Inputs {
    return new AcceptOfferCall__Inputs(this);
  }

  get outputs(): AcceptOfferCall__Outputs {
    return new AcceptOfferCall__Outputs(this);
  }
}

export class AcceptOfferCall__Inputs {
  _call: AcceptOfferCall;

  constructor(call: AcceptOfferCall) {
    this._call = call;
  }

  get _offer(): AcceptOfferCall_offerStruct {
    return changetype<AcceptOfferCall_offerStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _signature(): AcceptOfferCall_signatureStruct {
    return changetype<AcceptOfferCall_signatureStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get _borrowerSettings(): AcceptOfferCall_borrowerSettingsStruct {
    return changetype<AcceptOfferCall_borrowerSettingsStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class AcceptOfferCall__Outputs {
  _call: AcceptOfferCall;

  constructor(call: AcceptOfferCall) {
    this._call = call;
  }
}

export class AcceptOfferCall_offerStruct extends ethereum.Tuple {
  get loanPrincipalAmount(): BigInt {
    return this[0].toBigInt();
  }

  get maximumRepaymentAmount(): BigInt {
    return this[1].toBigInt();
  }

  get nftCollateralId(): BigInt {
    return this[2].toBigInt();
  }

  get nftCollateralContract(): Address {
    return this[3].toAddress();
  }

  get loanDuration(): BigInt {
    return this[4].toBigInt();
  }

  get loanAdminFeeInBasisPoints(): i32 {
    return this[5].toI32();
  }

  get loanERC20Denomination(): Address {
    return this[6].toAddress();
  }

  get referrer(): Address {
    return this[7].toAddress();
  }
}

export class AcceptOfferCall_signatureStruct extends ethereum.Tuple {
  get nonce(): BigInt {
    return this[0].toBigInt();
  }

  get expiry(): BigInt {
    return this[1].toBigInt();
  }

  get signer(): Address {
    return this[2].toAddress();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }
}

export class AcceptOfferCall_borrowerSettingsStruct extends ethereum.Tuple {
  get revenueSharePartner(): Address {
    return this[0].toAddress();
  }

  get referralFeeInBasisPoints(): i32 {
    return this[1].toI32();
  }
}

export class CancelLoanCommitmentBeforeLoanHasBegunCall extends ethereum.Call {
  get inputs(): CancelLoanCommitmentBeforeLoanHasBegunCall__Inputs {
    return new CancelLoanCommitmentBeforeLoanHasBegunCall__Inputs(this);
  }

  get outputs(): CancelLoanCommitmentBeforeLoanHasBegunCall__Outputs {
    return new CancelLoanCommitmentBeforeLoanHasBegunCall__Outputs(this);
  }
}

export class CancelLoanCommitmentBeforeLoanHasBegunCall__Inputs {
  _call: CancelLoanCommitmentBeforeLoanHasBegunCall;

  constructor(call: CancelLoanCommitmentBeforeLoanHasBegunCall) {
    this._call = call;
  }

  get _nonce(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelLoanCommitmentBeforeLoanHasBegunCall__Outputs {
  _call: CancelLoanCommitmentBeforeLoanHasBegunCall;

  constructor(call: CancelLoanCommitmentBeforeLoanHasBegunCall) {
    this._call = call;
  }
}

export class DrainERC1155AirdropCall extends ethereum.Call {
  get inputs(): DrainERC1155AirdropCall__Inputs {
    return new DrainERC1155AirdropCall__Inputs(this);
  }

  get outputs(): DrainERC1155AirdropCall__Outputs {
    return new DrainERC1155AirdropCall__Outputs(this);
  }
}

export class DrainERC1155AirdropCall__Inputs {
  _call: DrainERC1155AirdropCall;

  constructor(call: DrainERC1155AirdropCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _receiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class DrainERC1155AirdropCall__Outputs {
  _call: DrainERC1155AirdropCall;

  constructor(call: DrainERC1155AirdropCall) {
    this._call = call;
  }
}

export class DrainERC20AirdropCall extends ethereum.Call {
  get inputs(): DrainERC20AirdropCall__Inputs {
    return new DrainERC20AirdropCall__Inputs(this);
  }

  get outputs(): DrainERC20AirdropCall__Outputs {
    return new DrainERC20AirdropCall__Outputs(this);
  }
}

export class DrainERC20AirdropCall__Inputs {
  _call: DrainERC20AirdropCall;

  constructor(call: DrainERC20AirdropCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DrainERC20AirdropCall__Outputs {
  _call: DrainERC20AirdropCall;

  constructor(call: DrainERC20AirdropCall) {
    this._call = call;
  }
}

export class DrainERC721AirdropCall extends ethereum.Call {
  get inputs(): DrainERC721AirdropCall__Inputs {
    return new DrainERC721AirdropCall__Inputs(this);
  }

  get outputs(): DrainERC721AirdropCall__Outputs {
    return new DrainERC721AirdropCall__Outputs(this);
  }
}

export class DrainERC721AirdropCall__Inputs {
  _call: DrainERC721AirdropCall;

  constructor(call: DrainERC721AirdropCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _receiver(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class DrainERC721AirdropCall__Outputs {
  _call: DrainERC721AirdropCall;

  constructor(call: DrainERC721AirdropCall) {
    this._call = call;
  }
}

export class LiquidateOverdueLoanCall extends ethereum.Call {
  get inputs(): LiquidateOverdueLoanCall__Inputs {
    return new LiquidateOverdueLoanCall__Inputs(this);
  }

  get outputs(): LiquidateOverdueLoanCall__Outputs {
    return new LiquidateOverdueLoanCall__Outputs(this);
  }
}

export class LiquidateOverdueLoanCall__Inputs {
  _call: LiquidateOverdueLoanCall;

  constructor(call: LiquidateOverdueLoanCall) {
    this._call = call;
  }

  get _loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LiquidateOverdueLoanCall__Outputs {
  _call: LiquidateOverdueLoanCall;

  constructor(call: LiquidateOverdueLoanCall) {
    this._call = call;
  }
}

export class MintObligationReceiptCall extends ethereum.Call {
  get inputs(): MintObligationReceiptCall__Inputs {
    return new MintObligationReceiptCall__Inputs(this);
  }

  get outputs(): MintObligationReceiptCall__Outputs {
    return new MintObligationReceiptCall__Outputs(this);
  }
}

export class MintObligationReceiptCall__Inputs {
  _call: MintObligationReceiptCall;

  constructor(call: MintObligationReceiptCall) {
    this._call = call;
  }

  get _loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MintObligationReceiptCall__Outputs {
  _call: MintObligationReceiptCall;

  constructor(call: MintObligationReceiptCall) {
    this._call = call;
  }
}

export class OnERC1155BatchReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155BatchReceivedCall__Inputs {
    return new OnERC1155BatchReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155BatchReceivedCall__Outputs {
    return new OnERC1155BatchReceivedCall__Outputs(this);
  }
}

export class OnERC1155BatchReceivedCall__Inputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get value3(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155BatchReceivedCall__Outputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC1155ReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155ReceivedCall__Inputs {
    return new OnERC1155ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155ReceivedCall__Outputs {
    return new OnERC1155ReceivedCall__Outputs(this);
  }
}

export class OnERC1155ReceivedCall__Inputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155ReceivedCall__Outputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PayBackLoanCall extends ethereum.Call {
  get inputs(): PayBackLoanCall__Inputs {
    return new PayBackLoanCall__Inputs(this);
  }

  get outputs(): PayBackLoanCall__Outputs {
    return new PayBackLoanCall__Outputs(this);
  }
}

export class PayBackLoanCall__Inputs {
  _call: PayBackLoanCall;

  constructor(call: PayBackLoanCall) {
    this._call = call;
  }

  get _loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PayBackLoanCall__Outputs {
  _call: PayBackLoanCall;

  constructor(call: PayBackLoanCall) {
    this._call = call;
  }
}

export class PullAirdropCall extends ethereum.Call {
  get inputs(): PullAirdropCall__Inputs {
    return new PullAirdropCall__Inputs(this);
  }

  get outputs(): PullAirdropCall__Outputs {
    return new PullAirdropCall__Outputs(this);
  }
}

export class PullAirdropCall__Inputs {
  _call: PullAirdropCall;

  constructor(call: PullAirdropCall) {
    this._call = call;
  }

  get _loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _nftAirdrop(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _nftAirdropId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _is1155(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }

  get _nftAirdropAmount(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class PullAirdropCall__Outputs {
  _call: PullAirdropCall;

  constructor(call: PullAirdropCall) {
    this._call = call;
  }
}

export class RenegotiateLoanCall extends ethereum.Call {
  get inputs(): RenegotiateLoanCall__Inputs {
    return new RenegotiateLoanCall__Inputs(this);
  }

  get outputs(): RenegotiateLoanCall__Outputs {
    return new RenegotiateLoanCall__Outputs(this);
  }
}

export class RenegotiateLoanCall__Inputs {
  _call: RenegotiateLoanCall;

  constructor(call: RenegotiateLoanCall) {
    this._call = call;
  }

  get _loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newLoanDuration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _newMaximumRepaymentAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _renegotiationFee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _lenderNonce(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _expiry(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _lenderSignature(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class RenegotiateLoanCall__Outputs {
  _call: RenegotiateLoanCall;

  constructor(call: RenegotiateLoanCall) {
    this._call = call;
  }
}

export class SetERC20PermitCall extends ethereum.Call {
  get inputs(): SetERC20PermitCall__Inputs {
    return new SetERC20PermitCall__Inputs(this);
  }

  get outputs(): SetERC20PermitCall__Outputs {
    return new SetERC20PermitCall__Outputs(this);
  }
}

export class SetERC20PermitCall__Inputs {
  _call: SetERC20PermitCall;

  constructor(call: SetERC20PermitCall) {
    this._call = call;
  }

  get _erc20(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _permit(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetERC20PermitCall__Outputs {
  _call: SetERC20PermitCall;

  constructor(call: SetERC20PermitCall) {
    this._call = call;
  }
}

export class SetERC20PermitsCall extends ethereum.Call {
  get inputs(): SetERC20PermitsCall__Inputs {
    return new SetERC20PermitsCall__Inputs(this);
  }

  get outputs(): SetERC20PermitsCall__Outputs {
    return new SetERC20PermitsCall__Outputs(this);
  }
}

export class SetERC20PermitsCall__Inputs {
  _call: SetERC20PermitsCall;

  constructor(call: SetERC20PermitsCall) {
    this._call = call;
  }

  get _erc20s(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _permits(): Array<boolean> {
    return this._call.inputValues[1].value.toBooleanArray();
  }
}

export class SetERC20PermitsCall__Outputs {
  _call: SetERC20PermitsCall;

  constructor(call: SetERC20PermitsCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateAdminFeeCall extends ethereum.Call {
  get inputs(): UpdateAdminFeeCall__Inputs {
    return new UpdateAdminFeeCall__Inputs(this);
  }

  get outputs(): UpdateAdminFeeCall__Outputs {
    return new UpdateAdminFeeCall__Outputs(this);
  }
}

export class UpdateAdminFeeCall__Inputs {
  _call: UpdateAdminFeeCall;

  constructor(call: UpdateAdminFeeCall) {
    this._call = call;
  }

  get _newAdminFeeInBasisPoints(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class UpdateAdminFeeCall__Outputs {
  _call: UpdateAdminFeeCall;

  constructor(call: UpdateAdminFeeCall) {
    this._call = call;
  }
}

export class UpdateMaximumLoanDurationCall extends ethereum.Call {
  get inputs(): UpdateMaximumLoanDurationCall__Inputs {
    return new UpdateMaximumLoanDurationCall__Inputs(this);
  }

  get outputs(): UpdateMaximumLoanDurationCall__Outputs {
    return new UpdateMaximumLoanDurationCall__Outputs(this);
  }
}

export class UpdateMaximumLoanDurationCall__Inputs {
  _call: UpdateMaximumLoanDurationCall;

  constructor(call: UpdateMaximumLoanDurationCall) {
    this._call = call;
  }

  get _newMaximumLoanDuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMaximumLoanDurationCall__Outputs {
  _call: UpdateMaximumLoanDurationCall;

  constructor(call: UpdateMaximumLoanDurationCall) {
    this._call = call;
  }
}

export class WrapCollateralCall extends ethereum.Call {
  get inputs(): WrapCollateralCall__Inputs {
    return new WrapCollateralCall__Inputs(this);
  }

  get outputs(): WrapCollateralCall__Outputs {
    return new WrapCollateralCall__Outputs(this);
  }
}

export class WrapCollateralCall__Inputs {
  _call: WrapCollateralCall;

  constructor(call: WrapCollateralCall) {
    this._call = call;
  }

  get _loanId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WrapCollateralCall__Outputs {
  _call: WrapCollateralCall;

  constructor(call: WrapCollateralCall) {
    this._call = call;
  }
}
